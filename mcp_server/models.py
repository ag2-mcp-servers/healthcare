# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T03:22:22+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class Article(BaseModel):
    bite: Optional[str] = None
    categories: Optional[List[List[str]]] = None
    content: Optional[str] = None
    date: Optional[str] = None
    excerpt: Optional[str] = None
    featured: Optional[bool] = None
    id: Optional[str] = None
    lang: Optional[str] = None
    layout: Optional[str] = None
    meta_description: Optional[str] = Field(None, alias='meta-description')
    meta_title: Optional[str] = Field(None, alias='meta-title')
    path: Optional[str] = None
    published: Optional[bool] = None
    related: Optional[List[List[str]]] = None
    seo_keywords: Optional[str] = Field(None, alias='seo-keywords')
    sort: Optional[float] = None
    tags: Optional[List[List]] = None
    title: Optional[str] = None
    title_short: Optional[str] = Field(None, alias='title-short')
    topics: Optional[List[List[str]]] = None
    url: Optional[str] = None


class ArticlesList(BaseModel):
    articles: Optional[List[Article]] = None


class BlogItem(BaseModel):
    categories: Optional[List[List[str]]] = None
    content: Optional[str] = None
    date: Optional[str] = None
    lang: Optional[str] = None
    layout: Optional[str] = None
    meta_description: Optional[str] = Field(None, alias='meta-description')
    meta_title: Optional[str] = Field(None, alias='meta-title')
    published: Optional[bool] = None
    seo_keywords: Optional[str] = Field(None, alias='seo-keywords')
    sort: Optional[float] = None
    tags: Optional[List[List]] = None
    title: Optional[str] = None
    topics: Optional[List[List[str]]] = None
    url: Optional[str] = None


class BlogList(BaseModel):
    blog: Optional[List[List[BlogItem]]] = None


class BlogPage(BaseModel):
    categories: Optional[List[List[str]]] = None
    content: Optional[str] = None
    date: Optional[str] = None
    excerpt: Optional[str] = None
    id: Optional[str] = None
    lang: Optional[str] = None
    layout: Optional[str] = None
    meta_description: Optional[str] = Field(None, alias='meta-description')
    meta_title: Optional[str] = Field(None, alias='meta-title')
    path: Optional[str] = None
    published: Optional[bool] = None
    seo_keywords: Optional[str] = Field(None, alias='seo-keywords')
    sort: Optional[float] = None
    tags: Optional[List[List]] = None
    title: Optional[str] = None
    topics: Optional[List[List[str]]] = None
    url: Optional[str] = None


class GlossaryItem(BaseModel):
    categories: Optional[List[str]] = None
    content: Optional[str] = None
    date: Optional[str] = None
    excerpt: Optional[str] = None
    id: Optional[str] = None
    lang: Optional[str] = None
    layout: Optional[str] = None
    path: Optional[str] = None
    published: Optional[bool] = None
    sort: Optional[float] = None
    tags: Optional[List[str]] = None
    title: Optional[str] = None
    url: Optional[str] = None


class GlossaryList(BaseModel):
    glossary: Optional[List[GlossaryItem]] = None


class GlossaryPage(BaseModel):
    categories: Optional[List[str]] = None
    content: Optional[str] = None
    date: Optional[str] = None
    excerpt: Optional[str] = None
    id: Optional[str] = None
    lang: Optional[str] = None
    layout: Optional[str] = None
    path: Optional[str] = None
    published: Optional[bool] = None
    sort: Optional[float] = None
    tags: Optional[List[str]] = None
    title: Optional[str] = None
    url: Optional[str] = None


class Page(BaseModel):
    categories: Optional[List[List]] = None
    content: Optional[str] = None
    date: Optional[str] = None
    excerpt: Optional[str] = None
    experience: Optional[str] = None
    id: Optional[str] = None
    lang: Optional[str] = None
    layout: Optional[str] = None
    path: Optional[str] = None
    published: Optional[bool] = None
    sort: Optional[float] = None
    tags: Optional[List[List]] = None
    title: Optional[str] = None
    url: Optional[str] = None


class QuestionPage(BaseModel):
    categories: Optional[List[str]] = None
    content: Optional[str] = None
    date: Optional[str] = None
    excerpt: Optional[str] = None
    id: Optional[str] = None
    lang: Optional[str] = None
    path: Optional[str] = None
    published: Optional[bool] = None
    sort: Optional[float] = None
    tags: Optional[List[str]] = None
    title: Optional[str] = None
    url: Optional[str] = None


class Question(BaseModel):
    categories: Optional[List[str]] = None
    content: Optional[str] = None
    date: Optional[str] = None
    excerpt: Optional[str] = None
    id: Optional[str] = None
    lang: Optional[str] = None
    path: Optional[str] = None
    published: Optional[bool] = None
    sort: Optional[float] = None
    tags: Optional[List[str]] = None
    title: Optional[str] = None
    url: Optional[str] = None


class QuestionsList(BaseModel):
    questions: Optional[List[Question]] = None


class StatePage(BaseModel):
    categories: Optional[List[List]] = None
    content: Optional[str] = None
    date: Optional[str] = None
    excerpt: Optional[str] = None
    id: Optional[str] = None
    lang: Optional[str] = None
    path: Optional[str] = None
    sort: Optional[float] = None
    stateurl: Optional[str] = None
    tags: Optional[List[List[str]]] = None
    title: Optional[str] = None
    url: Optional[str] = None


class State(BaseModel):
    categories: Optional[List[List]] = None
    content: Optional[str] = None
    date: Optional[str] = None
    excerpt: Optional[str] = None
    id: Optional[str] = None
    lang: Optional[str] = None
    path: Optional[str] = None
    sort: Optional[float] = None
    stateurl: Optional[str] = None
    tags: Optional[List[List[str]]] = None
    title: Optional[str] = None
    url: Optional[str] = None


class StatesList(BaseModel):
    states: Optional[List[List[State]]] = None


class Topic(BaseModel):
    articleorder: Optional[List[List[str]]] = None
    categories: Optional[List[List]] = None
    content: Optional[str] = None
    date: Optional[str] = None
    excerpt: Optional[str] = None
    id: Optional[str] = None
    lang: Optional[str] = None
    layout: Optional[str] = None
    meta_description: Optional[str] = Field(None, alias='meta-description')
    meta_title: Optional[str] = Field(None, alias='meta-title')
    order: Optional[float] = None
    path: Optional[str] = None
    published: Optional[bool] = None
    sort: Optional[float] = None
    tags: Optional[List[List[str]]] = None
    title: Optional[str] = None
    url: Optional[str] = None


class TopicsList(BaseModel):
    topics: Optional[List[Topic]] = None


class MediaTypeExtension(Enum):
    field_json = '.json'
